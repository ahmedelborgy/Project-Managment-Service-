{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GlobalInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    //const token=localStorage.getItem('token');\n    //  const basUrl:string='https://upskilling-egypt.com:3003/docs/#/Users/post_api_v1/'\n    //const basUrl:string='https://upskilling-egypt.com:3003/api/v1/'\n    const token = localStorage.getItem('userToken');\n    const baseUrl = 'https://upskilling-egypt.com:3003/api/v1/';\n    let Headers = request.clone({\n      url: baseUrl + request.url,\n      setHeaders: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return next.handle(Headers);\n  }\n  static #_ = this.ɵfac = function GlobalInterceptor_Factory(t) {\n    return new (t || GlobalInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GlobalInterceptor,\n    factory: GlobalInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["GlobalInterceptor","constructor","intercept","request","next","token","localStorage","getItem","baseUrl","Headers","clone","url","setHeaders","handle","_","_2","factory","ɵfac"],"sources":["E:\\PMS-P\\Project-Managment-Service-\\src\\app\\core\\interceptores\\global.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GlobalInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n   \r\n   \r\n    //const token=localStorage.getItem('token');\r\n  //  const basUrl:string='https://upskilling-egypt.com:3003/docs/#/Users/post_api_v1/'\r\n   //const basUrl:string='https://upskilling-egypt.com:3003/api/v1/'\r\n    const token = localStorage.getItem('userToken');\r\n    const baseUrl: string = 'https://upskilling-egypt.com:3003/api/v1/';\r\n  \r\n    let Headers = request.clone({\r\n      url: baseUrl + request.url,\r\n      setHeaders:{\r\n        'Authorization':`Bearer ${token}`\r\n      }\r\n    })\r\n    return next.handle(Headers)\r\n};\r\n\r\n}\r\n\r\n\r\n"],"mappings":";AAUA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAGxD;IACF;IACC;IACC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,OAAO,GAAW,2CAA2C;IAEnE,IAAIC,OAAO,GAAGN,OAAO,CAACO,KAAK,CAAC;MAC1BC,GAAG,EAAEH,OAAO,GAAGL,OAAO,CAACQ,GAAG;MAC1BC,UAAU,EAAC;QACT,eAAe,EAAC,UAAUP,KAAK;;KAElC,CAAC;IACF,OAAOD,IAAI,CAACS,MAAM,CAACJ,OAAO,CAAC;EAC/B;EAAC,QAAAK,CAAA,G;qBApBYd,iBAAiB;EAAA;EAAA,QAAAe,EAAA,G;WAAjBf,iBAAiB;IAAAgB,OAAA,EAAjBhB,iBAAiB,CAAAiB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}