{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(_HttpClient) {\n    this._HttpClient = _HttpClient;\n  }\n  getManagerTasks(param) {\n    return this._HttpClient.get('Task/manager', {\n      params: param\n    });\n  }\n  onAddTasks(data) {\n    return this._HttpClient.post('Task/', data);\n  }\n  static #_ = this.ɵfac = function TasksService_Factory(t) {\n    return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TasksService,\n    factory: TasksService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TasksService","constructor","_HttpClient","getManagerTasks","param","get","params","onAddTasks","data","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\PMS-P\\Project-Managment-Service-\\src\\app\\Modules\\dashboard\\Modules\\manager\\tasks\\services\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup } from '@angular/forms';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n\r\n  constructor(private _HttpClient:HttpClient) { }\r\n  getManagerTasks(param:any):Observable<any>{\r\n    return this._HttpClient.get('Task/manager',{params:param})\r\n  }\r\n  onAddTasks(data: FormGroup): Observable<any>{\r\n    return this._HttpClient.post('Task/',data)\r\n    \r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,WAAsB;IAAtB,KAAAA,WAAW,GAAXA,WAAW;EAAe;EAC9CC,eAAeA,CAACC,KAAS;IACvB,OAAO,IAAI,CAACF,WAAW,CAACG,GAAG,CAAC,cAAc,EAAC;MAACC,MAAM,EAACF;IAAK,CAAC,CAAC;EAC5D;EACAG,UAAUA,CAACC,IAAe;IACxB,OAAO,IAAI,CAACN,WAAW,CAACO,IAAI,CAAC,OAAO,EAACD,IAAI,CAAC;EAE5C;EAAC,QAAAE,CAAA,G;qBATUV,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZf,YAAY;IAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}